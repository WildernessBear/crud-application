{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\littl\\\\OneDrive\\\\Documents\\\\Web Development\\\\crud-application\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movieName, setMovieName] = useState('');\n  const [review, setReview] = useState('');\n  const [movieReviewList, setMovieList] = useState([]);\n  const [newReview, setNewReview] = useState('');\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setMovieList(response.data);\n    });\n  }, []); // called everytime sumbit button pressed\n\n  const submitReview = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      movieName: movieName,\n      movieReview: review\n    }); // updates webpage after submitting without refreshing\n\n    setMovieList([...movieReviewList, {\n      movieName: movieName,\n      movieReview: review\n    }]);\n  };\n\n  const deleteReview = movie => {\n    Axios.delete(`http://localhost:3001/api/delete/${movie}`);\n  };\n\n  const updateReview = movie => {\n    Axios.put('http://localhost:3001/api/update', {\n      movieName: movie,\n      movieReview: newReview\n    }); // clear string so empty next time\n\n    setNewReview('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"movieReview\",\n        onChange: e => {\n          setMovieName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"review\",\n        onChange: e => {\n          setReview(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitReview,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), movieReviewList.map(val => {\n        // display reviews to site\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: val.movieName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: val.movieReview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteReview(val.movieName);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewReview(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateReview(val.movieName);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LkeNp61Y5p1TMUcp6F7Jha5iSGY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/littl/OneDrive/Documents/Web Development/crud-application/client/src/App.js"],"names":["React","useState","useEffect","Axios","App","movieName","setMovieName","review","setReview","movieReviewList","setMovieList","newReview","setNewReview","get","then","response","data","submitReview","post","movieReview","deleteReview","movie","delete","updateReview","put","e","target","value","map","val"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\n\nfunction App() {\n\n  const [movieName, setMovieName] = useState('');\n  const [review, setReview] = useState('');\n  const [movieReviewList, setMovieList] = useState([]);\n  const [newReview, setNewReview] = useState('');\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then((response) => {\n      setMovieList(response.data);\n    });\n  }, []);\n\n  // called everytime sumbit button pressed\n  const submitReview = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      movieName: movieName,\n      movieReview: review,\n    });\n\n    // updates webpage after submitting without refreshing\n    setMovieList([\n      ...movieReviewList,\n      { movieName: movieName, movieReview: review },\n    ]);\n  };\n  \n  const deleteReview = (movie) => {\n    Axios.delete(`http://localhost:3001/api/delete/${movie}`);\n  };\n\n  const updateReview = (movie) => {\n    Axios.put('http://localhost:3001/api/update', {\n      movieName: movie,\n      movieReview: newReview,\n    });\n    // clear string so empty next time\n    setNewReview('');\n  };\n\n  return (\n    <div className='App'>\n    \n\n      <div className='form'>\n      <h1>Movie Reviews</h1>\n        <label>Movie Name:</label>\n        <input\n          type='text'\n          name='movieReview'\n          onChange={(e) => {\n            setMovieName(e.target.value)\n          }}\n        />\n\n        <label>Review:</label>\n        <input\n          type='text'\n          name='review'\n          onChange={(e) => {\n            setReview(e.target.value)\n          }}\n        />\n\n        <button onClick={submitReview}>\n          Submit\n        </button>\n\n        {movieReviewList.map((val) => { // display reviews to site\n          return (\n            <div className='card'>\n              <h1>{val.movieName}</h1>\n              <p>{val.movieReview}</p>\n\n              <button onClick={() => { deleteReview(val.movieName) }}>\n                Delete\n              </button>\n\n              <input\n                type='text'\n                id='updateInput'\n                onChange={(e) => {\n                  setNewReview(e.target.value)\n                }} />\n        \n              <button onClick={() => { updateReview(val.movieName) }}>\n                Update\n              </button>\n            </div>\n            \n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}